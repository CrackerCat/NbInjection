apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "top.canyie.nbinjection"
        minSdkVersion 21 // Native bridge is added in sdk 21
        targetSdkVersion 29
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

def tempPath = "$buildDir/intermediates/magisk"
def tempTemplatePath = "$tempPath/template"
def nativeDir = "$tempTemplatePath/system/"
def nativeDirX86 = "$tempTemplatePath/system_x86/"
def nativeAbiToSystemDirMap = ['armeabi-v7a': 'lib', 'arm64-v8a': 'lib64']
def nativeAbiToSystemDirMapX86 = ['x86': 'lib', 'x86_64': 'lib64']
def nativeLibName = 'libnbinjection.so'
def releasePath = "$buildDir/outputs/magisk"

task copyMagiskTemplate(type: Copy) {
    from file("$rootDir/template")
    into file(tempTemplatePath)
}

task copyNativeLibs() {
    doLast {
        stripReleaseDebugSymbols.outputs.files.each { baseInputDir ->
            nativeAbiToSystemDirMap.each { origin, to ->
                copy {
                    from file("$baseInputDir/lib/$origin/$nativeLibName")
                    into file("$nativeDir/$to")
                }
            }

            nativeAbiToSystemDirMapX86.each { origin, to ->
                copy {
                    from file("$baseInputDir/lib/$origin/$nativeLibName")
                    into file("$nativeDirX86/$to")
                }
            }
        }
    }
}

task zipMagiskFiles(type: Zip) {
    from file(tempTemplatePath)
    destinationDir file(releasePath)
    baseName 'magisk-nbinjection'
}

task assembleMagiskRelease(type: GradleBuild, dependsOn: build) {
    tasks = [
            'copyMagiskTemplate',
            'copyNativeLibs',
            'zipMagiskFiles'
    ]
}
